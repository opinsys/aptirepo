#!/bin/sh
# aptirepo - simple APT repository tool
# Copyright (C) 2013 Opinsys Oy
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

set -eu

list_dirs()
{
    find "$1" -mindepth 1 -maxdepth 1 -type d -printf '%f\n'
}

write_contents()
{
    local dist comp

    dist=$1
    comp=$2

    apt-ftparchive --db .aptirepo/db contents "pool/${dist}/${comp}" \
        | gzip >"dists/${dist}/${comp}/Contents.gz"
}

write_sources()
{
    local dist comp archdir sources

    dist=$1
    comp=$2
    archdir=$3
    sources="dists/${dist}/${comp}/${archdir}/Sources"

    apt-ftparchive sources "pool/${dist}/${comp}" >"${sources}"
    gzip -c "${sources}" >"${sources}.gz"
}

write_packages()
{
    local dist comp archdir packages

    dist=$1
    comp=$2
    archdir=$3
    packages="dists/${dist}/${comp}/${archdir}/Packages"

    apt-ftparchive --db .aptirepo/db --arch "${archdir#binary-}" \
        packages "pool/${dist}/${comp}" >"${packages}"
    gzip -c "${packages}" >"${packages}.gz"
}

write_release()
{
    local dist comps archs

    dist=$1
    comps=$(find "dists/${dist}" -mindepth 1 -maxdepth 1 -type d -printf '%f ')
    archs=$(find "dists/${dist}" -mindepth 2 -maxdepth 2 -type d -printf '%f ')

    apt-ftparchive --db .aptirepo/db \
        -o "APT::FTPArchive::Release::Codename=${dist}" \
        -o "APT::FTPArchive::Release::Components=${comps}" \
        -o "APT::FTPArchive::Release::Architectures=${archs}" \
        release "dists/${dist}" >"dists/${dist}/Release"
}

APTIREPO_ROOT=${APTIREPO_ROOT:-.}

cd "${APTIREPO_ROOT}"

if [ ! -d .aptirepo ]; then
    echo "'$(pwd)' is not an aptirepo repository" >&2
    exit 1
fi

APTIREPO_SIGN=0

while getopts "s" flag; do
    case $flag in
        s)
            APTIREPO_SIGN=1
            ;;
        ?)
            exit 1
            ;;
        *)
            echo "getopts failed catastrophically" >&2
            exit 1
            ;;
  esac
done

shift $((OPTIND-1))

if [ $# -ne 0 ]; then
    echo "wrong number of arguments" >&2
    echo "Usage: $(basename $0) [-s]" >&2
    exit 1
fi

(
    flock -n 9 || {
        echo "failed to lock the repository" >&2
        exit 1
    }
    list_dirs dists | while read dist; do
        list_dirs "dists/${dist}" | while read comp; do
            write_contents "${dist}" "${comp}"
            list_dirs "dists/${dist}/${comp}" | while read archdir; do
                if [ "${archdir}" = "source" ]; then
                    write_sources "${dist}" "${comp}" "${archdir}"
                else
                    write_packages "${dist}" "${comp}" "${archdir}"
                fi
            done
        done
        write_release "${dist}"
    done

    list_dirs dists | while read dist; do
        if [ $APTIREPO_SIGN -ne 0 ]; then
            gpg --output "dists/${dist}/Release.gpg" --detach-sign --armor \
                "dists/${dist}/Release"
        fi
    done
) 9>.aptirepo/lock
