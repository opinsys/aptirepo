#!/bin/sh

set -eu

APTIREPO_ROOT=${APTIREPO_ROOT:-.}

cd "${APTIREPO_ROOT}"

if [ ! -d .aptirepo ]; then
    echo "'$(pwd)' is not an aptirepo repository" >&2
    exit 1
fi


list_dirs()
{
    find "$1" -mindepth 1 -maxdepth 1 -type d -printf '%f\n'
}

## - generate Sources and Packages For each architecture in each
##   component in each distribution
## - generate Contents for each component in each distribution
## - generate Release for each distribution
list_dirs dists | while read dist; do
    list_dirs "dists/${dist}" | while read comp; do
        apt-ftparchive --db .aptirepo/db contents "pool/${dist}/${comp}" \
            | gzip >"dists/${dist}/${comp}/Contents.gz"
        list_dirs "dists/${dist}/${comp}" | while read archdir; do
            if [ "${archdir}" = "source" ]; then
                apt-ftparchive sources "pool/${dist}/${comp}" \
                    >"dists/${dist}/${comp}/${archdir}/Sources"
                gzip -c "dists/${dist}/${comp}/${archdir}/Sources" \
                    >"dists/${dist}/${comp}/${archdir}/Sources.gz"
            else
                apt-ftparchive --db .aptirepo/db --arch "${archdir#binary-}" \
                    packages "pool/${dist}/${comp}" \
                    >"dists/${dist}/${comp}/${archdir}/Packages"
                gzip -c "dists/${dist}/${comp}/${archdir}/Packages" \
                    >"dists/${dist}/${comp}/${archdir}/Packages.gz"
            fi
        done
    done

    comps=$(find "dists/${dist}" -mindepth 1 -maxdepth 1 -type d -printf '%f ')
    archs=$(find "dists/${dist}" -mindepth 2 -maxdepth 2 -type d -printf '%f ')
    apt-ftparchive --db .aptirepo/db \
        -o "APT::FTPArchive::Release::Codename=${dist}" \
        -o "APT::FTPArchive::Release::Components=${comps}" \
        -o "APT::FTPArchive::Release::Architectures=${archs}" \
        release "dists/${dist}" >"dists/${dist}/Release"

done
